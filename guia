import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

export default function Agendamento() {
  const [startDate, setStartDate] = useState(new Date());
  const [selectedHour, setSelectedHour] = useState(null);

  const availableHours = [
    "08:00", "09:00", "10:00", "11:00", "13:00", "14:00", "15:00", "16:00"
  ];

  const handleAgendar = () => {
    if (selectedHour) {
      alert(`Agendamento feito para ${startDate.toLocaleDateString()} às ${selectedHour}`);
    } else {
      alert("Selecione um horário.");
    }
  };

  return (
    <div className="p-4 max-w-4xl mx-auto space-y-8">
      {/* Agendamento */}
      <Card className="shadow-xl">
        <CardContent className="p-6">
          <h2 className="text-xl font-semibold mb-4 text-blue-900">Agendar Serviço</h2>

          <img src="/img/agendamento.jpg" alt="Agendamento" className="w-full h-48 object-cover rounded-lg mb-4" />

          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700 mb-1">Selecione a data:</label>
            <DatePicker 
              selected={startDate} 
              onChange={(date) => setStartDate(date)} 
              dateFormat="dd/MM/yyyy" 
              className="border rounded px-3 py-2 w-full"
            />
          </div>

          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700 mb-2">Selecione o horário:</label>
            <div className="grid grid-cols-4 gap-2">
              {availableHours.map((hour) => (
                <Button
                  key={hour}
                  variant={selectedHour === hour ? "default" : "outline"}
                  onClick={() => setSelectedHour(hour)}
                  className="text-sm"
                >
                  {hour}
                </Button>
              ))}
            </div>
          </div>

          <Button className="w-full bg-blue-900 text-white mt-4" onClick={handleAgendar}>
            Confirmar Agendamento
          </Button>
        </CardContent>
      </Card>

      {/* Painel do Cliente */}
      <Card className="shadow-xl">
        <CardContent className="p-6">
          <h2 className="text-xl font-semibold mb-4 text-blue-900">Painel do Cliente</h2>

          <img src="/img/painel-cliente.jpg" alt="Painel do Cliente" className="w-full h-48 object-cover rounded-lg mb-4" />

          <ul className="list-disc pl-5 text-gray-700 space-y-2">
            <li>Visualizar agendamentos pendentes, confirmados e concluídos</li>
            <li>Receber atualizações do status do serviço</li>
            <li>Reagendar ou cancelar serviços com antecedência</li>
            <li>Avaliar a oficina após a conclusão</li>
            <li>Receber mensagens e alertas via WhatsApp</li>
          </ul>
        </CardContent>
      </Card>

      {/* Painel da Oficina */}
      <Card className="shadow-xl">
        <CardContent className="p-6">
          <h2 className="text-xl font-semibold mb-4 text-blue-900">Painel da Oficina</h2>

          <img src="/img/painel-oficina.jpg" alt="Painel da Oficina" className="w-full h-48 object-cover rounded-lg mb-4" />

          <ul className="list-disc pl-5 text-gray-700 space-y-2">
            <li>Gerenciar agenda de atendimentos</li>
            <li>Definir horários disponíveis e tempo por serviço</li>
            <li>Enviar documentos e fotos para aprovação de cadastro</li>
            <li>Aceitar contratos com certificado digital</li>
            <li>Receber notificações de novos agendamentos</li>
            <li>Atualizar status do serviço em tempo real</li>
          </ul>
        </CardContent>
      </Card>
    </div>
  );
}
git push -u origin main
